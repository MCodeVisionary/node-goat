workflow:
  name: "gitlab-jfrog-node-goat-ci"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never

default:
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: https://gitlab.com

stages:
  - npm_build

include:
  - remote: "https://releases.jfrog.io/artifactory/jfrog-cli/gitlab/v2/.setup-jfrog-unix.yml"

variables:
  JF_URL: "${JF_URL}"
  JF_USERNAME: "${JF_USERNAME}"
  BUILD_NAME: "${CI_PIPELINE_NAME	}"
  BUILD_ID: "${CI_PIPELINE_ID}"
  JF_PROJECT: "${JF_PROJECT}"
  JFROG_CLI_LOG_LEVEL: "DEBUG"
  # NPM_JF_RT_REPO: ""
  # DOCKER_JF_RT_REPO: ""

build-job:
  stage: npm_build
  image: node:lts
  script:
    - echo "Build triggered by commit - "${CI_COMMIT_SHA}" on branch - ${CI_COMMIT_BRANCH} by ${CI_COMMIT_AUTHOR}"
    - |
      JF_ACCESS_TOKEN=$(curl -X POST -H "Content-Type: application/json" "https://${JF_URL}/access/api/v1/oidc/token -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"${GITLAB_OIDC_TOKEN}\", \"provider_name\": \"rkfrog-gitlab\"}") | echo $JF_ACCESS_TOKEN
    - !reference [.setup_jfrog, script] # install JF-CLI v2
    - jf --version
    - ls -la /builds/${CI_PROJECT_PATH}
    # - env
    - jf c show
    - jf rt ping
    # - jf npm-config --repo-deploy=$NPM_JF_RT_REPO -repo-resolve=$NPM_JF_RT_REPO
    # - jf npm config set registry $JF_URL/artifactory/api/npm/$NPM_JF_RT_REPO/
    # - jf npm config list | jq -r .registry
    # - echo NPM_PACKAGE_BUILD_VERSION=$(cat package.json | jq -r ."version") >> $GITHUB_ENV